{"version":3,"sources":["webpack:///contact.min.js","webpack:///./client/pages/contact/index.jsx","webpack:///./client/pages/contact/Form.jsx","webpack:///./client/components/form/TextareaControl.jsx","webpack:///./client/pages/contact/Actions.js","webpack:///./client/pages/contact/Constants.js","webpack:///./client/pages/contact/Store.js"],"names":["webpackJsonp","module","exports","__webpack_require__","React","FormView","App","blastoff","this","mainElement","render","createElement","window","document","getElementById","parent","app","call",447,"ControlGroup","TextControl","TextareaControl","Button","Spinner","Actions","Store","Component","createClass","displayName","mixins","addons","LinkedStateMixin","getInitialState","reset","getState","componentDidMount","addChangeListener","onStoreChange","refs","nameControl","inputField","getDOMNode","focus","componentWillUnmount","removeChangeListener","setState","handleSubmit","event","preventDefault","stopPropagation","sendMessage","name","state","email","message","alerts","success","push","key","className","error","formElements","label","ref","hasError","valueLink","linkState","help","disabled","loading","rows","hideLabel","hideHelp","type","inputClasses","btn-primary","space","show","onSubmit",448,"ObjectAssign","ClassNames","View","form-control","props","placeholder","value","undefined","onChange",449,"Dispatcher","Constants","Fetch","VIEW_ACTION","PayloadSources","SERVER_ACTION","ActionTypes","dispatch","handleAction","data","SEND_MESSAGE","request","method","url","err","response","SEND_MESSAGE_RESPONSE",450,"FluxConstant","set",451,"FluxStore","CloneDeep","ParseValidation","extend","dispatcher","defaultState","onDispatcherAction","payload","action","emitChange","validation"],"mappings":"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","file":"contact.min.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {/* global window */\n\t'use strict';\n\t\n\tvar React = __webpack_require__(2);\n\tvar FormView = __webpack_require__(447);\n\t\n\tvar App = {\n\t    blastoff: function blastoff() {\n\t\n\t        this.mainElement = React.render(React.createElement(FormView, null), window.document.getElementById('app-mount'));\n\t    }\n\t};\n\t\n\tmodule.exports = App;\n\t\n\t/* $lab:coverage:off$ */\n\tif (!module.parent) {\n\t    window.app = App;\n\t    App.blastoff();\n\t}\n\t/* $lab:coverage:on$ */\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n\n/***/ 447:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(2);\n\tvar ControlGroup = __webpack_require__(372);\n\tvar TextControl = __webpack_require__(373);\n\tvar TextareaControl = __webpack_require__(448);\n\tvar Button = __webpack_require__(374);\n\tvar Spinner = __webpack_require__(375);\n\tvar Actions = __webpack_require__(449);\n\tvar Store = __webpack_require__(451);\n\t\n\tvar Component = React.createClass({\n\t    displayName: 'Component',\n\t\n\t    mixins: [React.addons.LinkedStateMixin],\n\t    getInitialState: function getInitialState() {\n\t\n\t        Store.reset();\n\t        return Store.getState();\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t\n\t        Store.addChangeListener(this.onStoreChange);\n\t        this.refs.nameControl.refs.inputField.getDOMNode().focus();\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t\n\t        Store.removeChangeListener(this.onStoreChange);\n\t    },\n\t    onStoreChange: function onStoreChange() {\n\t\n\t        this.setState(Store.getState());\n\t    },\n\t    handleSubmit: function handleSubmit(event) {\n\t\n\t        event.preventDefault();\n\t        event.stopPropagation();\n\t\n\t        Actions.sendMessage({\n\t            name: this.state.name,\n\t            email: this.state.email,\n\t            message: this.state.message\n\t        });\n\t    },\n\t    render: function render() {\n\t\n\t        var alerts = [];\n\t        if (this.state.success) {\n\t            alerts.push(React.createElement('div', { key: 'success', className: 'alert alert-success' }, 'Success. We have received your message.'));\n\t        } else if (this.state.error) {\n\t            alerts.push(React.createElement('div', { key: 'danger', className: 'alert alert-danger' }, this.state.error));\n\t        }\n\t\n\t        var formElements;\n\t        if (!this.state.success) {\n\t            formElements = React.createElement('fieldset', null, React.createElement(TextControl, {\n\t                name: 'name',\n\t                label: 'Your name',\n\t                ref: 'nameControl',\n\t                hasError: this.state.hasError.name,\n\t                valueLink: this.linkState('name'),\n\t                help: this.state.help.name,\n\t                disabled: this.state.loading\n\t            }), React.createElement(TextControl, {\n\t                name: 'email',\n\t                label: 'Your email',\n\t                hasError: this.state.hasError.email,\n\t                valueLink: this.linkState('email'),\n\t                help: this.state.help.email,\n\t                disabled: this.state.loading\n\t            }), React.createElement(TextareaControl, {\n\t                name: 'message',\n\t                label: 'Message',\n\t                rows: '5',\n\t                hasError: this.state.hasError.message,\n\t                valueLink: this.linkState('message'),\n\t                help: this.state.help.message,\n\t                disabled: this.state.loading\n\t            }), React.createElement(ControlGroup, { hideLabel: true, hideHelp: true }, React.createElement(Button, {\n\t                type: 'submit',\n\t                inputClasses: { 'btn-primary': true },\n\t                disabled: this.state.loading }, 'Send message', React.createElement(Spinner, { space: 'left', show: this.state.loading }))));\n\t        }\n\t\n\t        return React.createElement('section', null, React.createElement('h1', { className: 'page-header' }, 'Send a message'), React.createElement('form', { onSubmit: this.handleSubmit }, alerts, formElements));\n\t    }\n\t});\n\t\n\tmodule.exports = Component;\n\n/***/ },\n\n/***/ 448:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(2);\n\tvar ObjectAssign = __webpack_require__(336);\n\tvar ControlGroup = __webpack_require__(372);\n\tvar ClassNames = __webpack_require__(218);\n\t\n\tvar View = React.createClass({\n\t    displayName: 'View',\n\t\n\t    render: function render() {\n\t\n\t        var inputClasses = ClassNames(ObjectAssign({\n\t            'form-control': true\n\t        }, this.props.inputClasses));\n\t\n\t        return React.createElement(ControlGroup, {\n\t            hasError: this.props.hasError,\n\t            label: this.props.label,\n\t            help: this.props.help }, React.createElement('textarea', {\n\t            ref: 'inputField',\n\t            className: inputClasses,\n\t            name: this.props.name,\n\t            rows: this.props.rows,\n\t            placeholder: this.props.placeholder,\n\t            value: this.props.value,\n\t            valueLink: this.props.valueLink,\n\t            disabled: this.props.disabled ? 'disabled' : undefined,\n\t            onChange: this.props.onChange\n\t        }));\n\t    }\n\t});\n\t\n\tmodule.exports = View;\n\n/***/ },\n\n/***/ 449:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Dispatcher = __webpack_require__(311);\n\tvar Constants = __webpack_require__(450);\n\tvar Fetch = __webpack_require__(318);\n\t\n\t\n\tvar VIEW_ACTION = Constants.PayloadSources.VIEW_ACTION;\n\tvar SERVER_ACTION = Constants.PayloadSources.SERVER_ACTION;\n\tvar ActionTypes = Constants.ActionTypes;\n\tvar dispatch = Dispatcher.handleAction;\n\t\n\t\n\tvar Actions = {\n\t    sendMessage: function (data) {\n\t\n\t        dispatch(VIEW_ACTION, ActionTypes.SEND_MESSAGE, data);\n\t\n\t        var request = {\n\t            method: 'POST',\n\t            url: '/api/contact',\n\t            data: data\n\t        };\n\t\n\t        Fetch(request, function (err, response) {\n\t\n\t            if (!err) {\n\t                response.success = true;\n\t            }\n\t\n\t            dispatch(SERVER_ACTION, ActionTypes.SEND_MESSAGE_RESPONSE, response);\n\t        });\n\t    }\n\t};\n\t\n\t\n\tmodule.exports = Actions;\n\n\n/***/ },\n\n/***/ 450:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar FluxConstant = __webpack_require__(316);\n\tvar PayloadSources = __webpack_require__(317);\n\t\n\t\n\tmodule.exports = {\n\t    PayloadSources: PayloadSources,\n\t    ActionTypes: FluxConstant.set([\n\t        'SEND_MESSAGE',\n\t        'SEND_MESSAGE_RESPONSE'\n\t    ])\n\t};\n\n\n/***/ },\n\n/***/ 451:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Dispatcher = __webpack_require__(311);\n\tvar FluxStore = __webpack_require__(334);\n\tvar CloneDeep = __webpack_require__(337);\n\tvar Constants = __webpack_require__(450);\n\tvar ParseValidation = __webpack_require__(368);\n\t\n\t\n\tvar ActionTypes = Constants.ActionTypes;\n\t\n\t\n\tvar Store = FluxStore.extend({\n\t    dispatcher: Dispatcher,\n\t    state: {},\n\t    defaultState: {\n\t        loading: false,\n\t        success: false,\n\t        error: undefined,\n\t        hasError: {},\n\t        help: {}\n\t    },\n\t    getState: function () {\n\t\n\t        return this.state;\n\t    },\n\t    reset: function () {\n\t\n\t        this.state = CloneDeep(this.defaultState);\n\t    },\n\t    onDispatcherAction: function (payload) {\n\t\n\t        var action = payload.action;\n\t\n\t        if (ActionTypes.SEND_MESSAGE === action.type) {\n\t            this.state.loading = true;\n\t            this.state.success = false;\n\t            this.state.error = undefined;\n\t            this.state.hasError = {};\n\t            this.state.help = {};\n\t            this.emitChange();\n\t        }\n\t\n\t        if (ActionTypes.SEND_MESSAGE_RESPONSE === action.type) {\n\t            var validation = ParseValidation(action.data.validation, action.data.message);\n\t\n\t            this.state.loading = false;\n\t            this.state.success = action.data.success;\n\t            this.state.hasError = validation.hasError;\n\t            this.state.help = validation.help;\n\t            this.state.error = validation.error;\n\t\n\t            this.emitChange();\n\t        }\n\t    }\n\t});\n\t\n\t\n\tmodule.exports = Store;\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** contact.min.js\n **/","/* global window */\nvar React = require('react/addons');\nvar FormView = require('./Form');\n\n\nvar App = {\n    blastoff: function () {\n\n        this.mainElement = React.render(\n            <FormView />,\n            window.document.getElementById('app-mount')\n        );\n    }\n};\n\n\nmodule.exports = App;\n\n\n/* $lab:coverage:off$ */\nif (!module.parent) {\n    window.app = App;\n    App.blastoff();\n}\n/* $lab:coverage:on$ */\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/pages/contact/index.jsx\n **/","var React = require('react/addons');\nvar ControlGroup = require('../../components/form/ControlGroup');\nvar TextControl = require('../../components/form/TextControl');\nvar TextareaControl = require('../../components/form/TextareaControl');\nvar Button = require('../../components/form/Button');\nvar Spinner = require('../../components/form/Spinner');\nvar Actions = require('./Actions');\nvar Store = require('./Store');\n\n\nvar Component = React.createClass({\n    mixins: [React.addons.LinkedStateMixin],\n    getInitialState: function () {\n\n        Store.reset();\n        return Store.getState();\n    },\n    componentDidMount: function () {\n\n        Store.addChangeListener(this.onStoreChange);\n        this.refs.nameControl.refs.inputField.getDOMNode().focus();\n    },\n    componentWillUnmount: function () {\n\n        Store.removeChangeListener(this.onStoreChange);\n    },\n    onStoreChange: function () {\n\n        this.setState(Store.getState());\n    },\n    handleSubmit: function (event) {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        Actions.sendMessage({\n            name: this.state.name,\n            email: this.state.email,\n            message: this.state.message\n        });\n    },\n    render: function () {\n\n        var alerts = [];\n        if (this.state.success) {\n            alerts.push(<div key=\"success\" className=\"alert alert-success\">\n                Success. We have received your message.\n            </div>);\n        }\n        else if (this.state.error) {\n            alerts.push(<div key=\"danger\" className=\"alert alert-danger\">\n                {this.state.error}\n            </div>);\n        }\n\n        var formElements;\n        if (!this.state.success) {\n            formElements = <fieldset>\n                <TextControl\n                    name=\"name\"\n                    label=\"Your name\"\n                    ref=\"nameControl\"\n                    hasError={this.state.hasError.name}\n                    valueLink={this.linkState('name')}\n                    help={this.state.help.name}\n                    disabled={this.state.loading}\n                />\n                <TextControl\n                    name=\"email\"\n                    label=\"Your email\"\n                    hasError={this.state.hasError.email}\n                    valueLink={this.linkState('email')}\n                    help={this.state.help.email}\n                    disabled={this.state.loading}\n                />\n                <TextareaControl\n                    name=\"message\"\n                    label=\"Message\"\n                    rows=\"5\"\n                    hasError={this.state.hasError.message}\n                    valueLink={this.linkState('message')}\n                    help={this.state.help.message}\n                    disabled={this.state.loading}\n                />\n                <ControlGroup hideLabel={true} hideHelp={true}>\n                    <Button\n                        type=\"submit\"\n                        inputClasses={{ 'btn-primary': true }}\n                        disabled={this.state.loading}>\n\n                        Send message\n                        <Spinner space=\"left\" show={this.state.loading} />\n                    </Button>\n                </ControlGroup>\n            </fieldset>;\n        }\n\n        return (\n            <section>\n                <h1 className=\"page-header\">Send a message</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {alerts}\n                    {formElements}\n                </form>\n            </section>\n        );\n    }\n});\n\n\nmodule.exports = Component;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/pages/contact/Form.jsx\n **/","var React = require('react/addons');\nvar ObjectAssign = require('object-assign');\nvar ControlGroup = require('../../components/form/ControlGroup');\nvar ClassNames = require('classnames');\n\n\nvar View = React.createClass({\n    render: function () {\n\n        var inputClasses = ClassNames(ObjectAssign({\n            'form-control': true\n        }, this.props.inputClasses));\n\n        return (\n            <ControlGroup\n                hasError={this.props.hasError}\n                label={this.props.label}\n                help={this.props.help}>\n\n                <textarea\n                    ref=\"inputField\"\n                    className={inputClasses}\n                    name={this.props.name}\n                    rows={this.props.rows}\n                    placeholder={this.props.placeholder}\n                    value={this.props.value}\n                    valueLink={this.props.valueLink}\n                    disabled={this.props.disabled ? 'disabled' : undefined}\n                    onChange={this.props.onChange}\n                />\n            </ControlGroup>\n        );\n    }\n});\n\n\nmodule.exports = View;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/components/form/TextareaControl.jsx\n **/","var Dispatcher = require('flux-dispatcher');\nvar Constants = require('./Constants');\nvar Fetch = require('../../helpers/jsonFetch');\n\n\nvar VIEW_ACTION = Constants.PayloadSources.VIEW_ACTION;\nvar SERVER_ACTION = Constants.PayloadSources.SERVER_ACTION;\nvar ActionTypes = Constants.ActionTypes;\nvar dispatch = Dispatcher.handleAction;\n\n\nvar Actions = {\n    sendMessage: function (data) {\n\n        dispatch(VIEW_ACTION, ActionTypes.SEND_MESSAGE, data);\n\n        var request = {\n            method: 'POST',\n            url: '/api/contact',\n            data: data\n        };\n\n        Fetch(request, function (err, response) {\n\n            if (!err) {\n                response.success = true;\n            }\n\n            dispatch(SERVER_ACTION, ActionTypes.SEND_MESSAGE_RESPONSE, response);\n        });\n    }\n};\n\n\nmodule.exports = Actions;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/pages/contact/Actions.js\n ** module id = 449\n ** module chunks = 2\n **/","var FluxConstant = require('flux-constant');\nvar PayloadSources = require('../../constants/PayloadSources');\n\n\nmodule.exports = {\n    PayloadSources: PayloadSources,\n    ActionTypes: FluxConstant.set([\n        'SEND_MESSAGE',\n        'SEND_MESSAGE_RESPONSE'\n    ])\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/pages/contact/Constants.js\n ** module id = 450\n ** module chunks = 2\n **/","var Dispatcher = require('flux-dispatcher');\nvar FluxStore = require('flux-store');\nvar CloneDeep = require('lodash/lang/cloneDeep');\nvar Constants = require('./Constants');\nvar ParseValidation = require('../../helpers/parseValidation');\n\n\nvar ActionTypes = Constants.ActionTypes;\n\n\nvar Store = FluxStore.extend({\n    dispatcher: Dispatcher,\n    state: {},\n    defaultState: {\n        loading: false,\n        success: false,\n        error: undefined,\n        hasError: {},\n        help: {}\n    },\n    getState: function () {\n\n        return this.state;\n    },\n    reset: function () {\n\n        this.state = CloneDeep(this.defaultState);\n    },\n    onDispatcherAction: function (payload) {\n\n        var action = payload.action;\n\n        if (ActionTypes.SEND_MESSAGE === action.type) {\n            this.state.loading = true;\n            this.state.success = false;\n            this.state.error = undefined;\n            this.state.hasError = {};\n            this.state.help = {};\n            this.emitChange();\n        }\n\n        if (ActionTypes.SEND_MESSAGE_RESPONSE === action.type) {\n            var validation = ParseValidation(action.data.validation, action.data.message);\n\n            this.state.loading = false;\n            this.state.success = action.data.success;\n            this.state.hasError = validation.hasError;\n            this.state.help = validation.help;\n            this.state.error = validation.error;\n\n            this.emitChange();\n        }\n    }\n});\n\n\nmodule.exports = Store;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/pages/contact/Store.js\n ** module id = 451\n ** module chunks = 2\n **/"],"sourceRoot":""}